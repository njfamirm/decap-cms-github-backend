# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Alwatr Containers

on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'

  pull_request:
    paths:
      - '.github/workflows/publish-container.yml'
      - 'Dockerfile'

env:
  REGISTRY: ghcr.io
  USERNAME: ${{github.repository_owner}}

jobs:
  build:
    if: github.repository_owner == 'njfamirm'

    name: Build Container
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üèó Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üèó Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üèó Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        if: ${{ github.event_name != 'pull_request' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: name=${{ env.REGISTRY }}/${{ env.USERNAME }}/decap-cms-github-backend,enable=true

          labels: |
            org.opencontainers.image.authors=njfamirm@gmail.com
            org.opencontainers.image.title=@njfamirm/decap-cms-github-backend
            org.opencontainers.image.description='Self-hosted decap cms github backend.'

          tags: |
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=semver,enable=true,pattern={{version}}
            type=ref,enable=true,event=pr
            type=ref,enable=true,event=branch

      - name: üöÄ Build and push container image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: Dockerfile
          # build-args: |
          cache-from: type=gha
          cache-to: type=gha,mode=max
